More generally: given two speeds v1 (A's speed, integer > 0) and v2 (B's speed, integer > 0) and a lead g (integer > 0) how long will it take B to catch A?

The result will be an array [hour, min, sec] which is the time needed in hours, minutes and seconds (round down to the nearest second) or a string in some languages.

If v1 >= v2 then return nil, nothing, null, None or {-1, -1, -1} for C++, C, Go, Nim, [] for Kotlin or "-1 -1 -1".

Examples: (form of the result depends on the language)

race(720, 850, 70) => [0, 32, 18] or "0 32 18" race(80, 91, 37) => [3, 21, 49] or "3 21 49"

  function race(v1, v2, g) {

    if (v2 < v1) { return null; }

    var seconds = Math.floor(g / (v2 - v1) * 3600);

    var h = Math.floor(seconds / 3600);

    var m = Math.floor((seconds - h * 3600) / 60);

    var s = seconds - h * 3600 - m * 60;

         return [h, m, s];

  }

Math.floor() 返回小于或等于一个给定数字的最大整数。

: Math.floor() === 向下取整
